#!/usr/bin/env python

# SimplePush API script
# Escrito por andre marques
# Para utilizar em servicos rotineiros de manutencao de servidor
# E para monitoramento de recursos

import ssl
from shemutils.logger import Logger
import argparse
try:
    import urllib2
except ModuleNotFoundError:
    import urllib.request as urllib2


context = ssl.SSLContext(ssl.PROTOCOL_TLSv1)
log = Logger("Push API")


class SimplePush(object):
    def __init__(self, id):
        """
        SimplePush object
        """
        self.request_url = "https://api.simplepush.io/send/" + id;

    def send_message(self, data):
        """
        Transmit the request to the REST api.
        Returns: HTTP request return code
        """
        title, message = data[0], data[1]
        return urllib2.urlopen(self.request_url + "/{0}/{1}".format(title, message), context=context).code


def main():
    parser = argparse.ArgumentParser()
    parser.add_argument("-i", "--id", help="SimplePush ID", required=True)
    parser.add_argument("-t", "--title", help="Notification title", required=True)
    parser.add_argument("-m", "--message", help="Notification message", required=True)
    args = parser.parse_args()

    log.info("Trying to send notification ...")
    push = SimplePush(args.id)
    response = push.send_message([args.title, args.message])
    if response == 200:
        log.step_ok("Notification transmission")
    else:
        log.step_fail("Notification transmission")
    return 0


if __name__ == "__main__":
    main()
